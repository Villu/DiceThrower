// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package net.sepman.dice.web;

import net.sepman.dice.domain.DiceThrow;
import net.sepman.dice.domain.Die;
import net.sepman.dice.service.DiceService;
import net.sepman.dice.service.ThrowService;
import net.sepman.dice.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    ThrowService ApplicationConversionServiceFactoryBean.throwService;
    
    @Autowired
    DiceService ApplicationConversionServiceFactoryBean.diceService;
    
    public Converter<DiceThrow, String> ApplicationConversionServiceFactoryBean.getDiceThrowToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<net.sepman.dice.domain.DiceThrow, java.lang.String>() {
            public String convert(DiceThrow diceThrow) {
                return new StringBuilder().append(diceThrow.getThrowTime()).append(' ').append(diceThrow.getCode()).append(' ').append(diceThrow.getOwner()).append(' ').append(diceThrow.getCommand()).toString();
            }
        };
    }
    
    public Converter<Long, DiceThrow> ApplicationConversionServiceFactoryBean.getIdToDiceThrowConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, net.sepman.dice.domain.DiceThrow>() {
            public net.sepman.dice.domain.DiceThrow convert(java.lang.Long id) {
                return throwService.findDiceThrow(id);
            }
        };
    }
    
    public Converter<String, DiceThrow> ApplicationConversionServiceFactoryBean.getStringToDiceThrowConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, net.sepman.dice.domain.DiceThrow>() {
            public net.sepman.dice.domain.DiceThrow convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DiceThrow.class);
            }
        };
    }
    
    public Converter<Long, Die> ApplicationConversionServiceFactoryBean.getIdToDieConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, net.sepman.dice.domain.Die>() {
            public net.sepman.dice.domain.Die convert(java.lang.Long id) {
                return diceService.findDie(id);
            }
        };
    }
    
    public Converter<String, Die> ApplicationConversionServiceFactoryBean.getStringToDieConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, net.sepman.dice.domain.Die>() {
            public net.sepman.dice.domain.Die convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Die.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getDiceThrowToStringConverter());
        registry.addConverter(getIdToDiceThrowConverter());
        registry.addConverter(getStringToDiceThrowConverter());
        registry.addConverter(getDieToStringConverter());
        registry.addConverter(getIdToDieConverter());
        registry.addConverter(getStringToDieConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
